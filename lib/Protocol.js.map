{"version":3,"sources":["../src/Protocol.js"],"names":["Encode","Decode","MSG_TYPE_SEND","MSG_TYPE_ACK","MSG_TYPE_RECEIVED","MSG_TYPE_RELEASE","MSG_TYPE_COMPLETED","QoS0","QoS1","QoS2","msgType","qos","dup","identifier","payload","remainingLength","undefined","length","buffer","Buffer","allocUnsafe","fixedHeader","writeUInt8","writeUInt16BE","copy","packet","Packet","offset","readInt8","readUInt16BE","constructor","totalLength","retryTimes","timestamp"],"mappings":"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","file":"Protocol.js","sourcesContent":["/**\n * bit           | 7 | 6 | 5 | 4 |  3  |  2  |    1     |    0     |\n * byte1         | Message Type  | QoS Level | Dup flag | Reserved |\n * byte2 - byte3 |              Message Identifiers\n * byte4 - byte5 |              Remaining Length\n * \n * * * Message Type * *\n * 0 Reserved\n * 1 Send\n * 2 Ack\n * 3 Received\n * 4 Released\n * 5 Completed\n * \n * * * QoS Level * *\n * 0 1 2\n * \n * * * Dup flag * *\n * 0 1\n * \n * * * Message Identifiers * *\n * 0 - 2^32\n */\n\nexport const MSG_TYPE_SEND = 0x1;\nexport const MSG_TYPE_ACK = 0x2;\nexport const MSG_TYPE_RECEIVED = 0x3;\nexport const MSG_TYPE_RELEASE = 0x4;\nexport const MSG_TYPE_COMPLETED = 0x5;\n\nexport const QoS0 = 0;\nexport const QoS1 = 1;\nexport const QoS2 = 2;\n\nexport function Encode(msgType = MSG_TYPE_SEND, qos = QoS0, dup = 0, identifier = 0, payload){\n    let remainingLength = 0;\n    if(payload != undefined){\n        remainingLength = payload.length;\n    }\n    let buffer = Buffer.allocUnsafe(5 + remainingLength);\n    let fixedHeader = (msgType << 4) | (qos << 2) | (dup << 1);\n    buffer.writeUInt8(fixedHeader, 0);\n    buffer.writeUInt16BE(identifier, 1);\n    buffer.writeUInt16BE(remainingLength, 3);\n    if(payload != undefined){\n        payload.copy(buffer, 5, 0, remainingLength);\n    }\n    let packet = new Packet(msgType, qos, dup, identifier, payload);\n    packet.buffer = buffer;\n    return packet;\n}\n\nexport function Decode(buffer, offset = 0){\n    let fixedHeader = buffer.readInt8(offset);\n    let msgType = fixedHeader >> 4;\n    let qos = (fixedHeader & 0xf) >> 2;\n    let dup = (fixedHeader & 0x3) >> 1;\n    let identifier = buffer.readUInt16BE(offset + 1);\n    let remainingLength = buffer.readUInt16BE(offset + 3);\n    let payload = Buffer.allocUnsafe(remainingLength);\n    buffer.copy(payload, 0, offset + 5, offset + 5 + remainingLength);\n    let packet = new Packet(msgType, qos, dup, identifier, payload);\n    packet.buffer = buffer;\n    return packet;\n}\n\nexport class Packet{\n    constructor(msgType = MSG_TYPE_SEND, qos = QoS0, dup = 0, identifier = 0, payload){\n        this.msgType = msgType;\n        this.qos = qos;\n        this.dup = dup;\n        this.identifier = identifier;\n        this.payload = payload;\n        if(payload == undefined){\n            this.remainingLength = 0;\n        } else {\n            this.remainingLength = payload.length;\n        }\n        this.totalLength = 5 + this.remainingLength;\n        this.retryTimes = 0;\n        this.timestamp = 0;\n        this.buffer = null;\n    }\n}"]}