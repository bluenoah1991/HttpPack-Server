{"version":3,"sources":["../src/HttpPack.js"],"names":["Protocol","HttpPack","constructor","options","storage","handlePacket","scope","packet","callback","msgType","MSG_TYPE_SEND","qos","QoS0","payload","QoS1","replyPacket","Encode","MSG_TYPE_ACK","identifier","timestamp","unix","savePacket","then","bind","QoS2","receivePacket","MSG_TYPE_RECEIVED","confirmPacket","MSG_TYPE_RELEASE","releasePacket","undefined","MSG_TYPE_COMPLETED","generateRetryPacket","retryTimes","retryPacket","cloneDeep","add","splitBuffer","buffer","packets","length","offset","Decode","push","totalLength","combinePacket","buffers","map","Buffer","concat","parseBody","body","nullString","Promise","resolve","waitHandles","all","generateBody","respondPackets","unconfirmedPacket","commit","generateId","id"],"mappings":"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","file":"HttpPack.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nimport Database from './Database';\nimport * as Protocol from './Protocol';\n\nexport default class HttpPack{\n    constructor(options){\n        this.storage = new Database(options);\n    }\n\n    handlePacket(scope, packet, callback){\n        if(packet.msgType == Protocol.MSG_TYPE_SEND){\n            if(packet.qos == Protocol.QoS0){\n                callback(scope, packet.payload);\n                return null;\n            } else if(packet.qos == Protocol.QoS1){\n                let replyPacket = Protocol.Encode(Protocol.MSG_TYPE_ACK, Protocol.QoS0, 0, packet.identifier);\n                replyPacket.timestamp = moment().unix();\n                return this.storage.savePacket(scope, replyPacket).then(function(){\n                    callback(scope, packet.payload);\n                }.bind(this));\n            } else if(packet.qos == Protocol.QoS2){\n                return this.storage.receivePacket(scope, packet.identifier, packet.payload).then(function(){\n                    let replyPacket = Protocol.Encode(Protocol.MSG_TYPE_RECEIVED, Protocol.QoS0, 0, packet.identifier);\n                    replyPacket.timestamp = moment().unix();\n                    return this.storage.savePacket(scope, replyPacket);\n                }.bind(this));\n            }\n        } else if(packet.msgType == Protocol.MSG_TYPE_ACK){\n            return this.storage.confirmPacket(scope, packet.identifier);\n        } else if(packet.msgType == Protocol.MSG_TYPE_RECEIVED){\n            return this.storage.confirmPacket(scope, packet.identifier).then(function(){\n                let replyPacket = Protocol.Encode(Protocol.MSG_TYPE_RELEASE, Protocol.QoS1, 0, packet.identifier);\n                replyPacket.timestamp = moment().unix();\n                return this.storage.savePacket(scope, replyPacket);\n            }.bind(this));      \n        } else if(packet.msgType == Protocol.MSG_TYPE_RELEASE){\n            return this.storage.releasePacket(scope, packet.identifier).then(function(payload){\n                if(payload != undefined){\n                    callback(scope, payload);\n                }\n                let replyPacket = Protocol.Encode(Protocol.MSG_TYPE_COMPLETED, Protocol.QoS0, 0, packet.identifier);\n                replyPacket.timestamp = moment().unix();\n                return this.storage.savePacket(scope, replyPacket);\n            }.bind(this));\n        } else if(packet.msgType == Protocol.MSG_TYPE_COMPLETED){\n            return this.storage.confirmPacket(scope, packet.identifier);\n        }\n    }\n\n    generateRetryPacket(packet){\n        if(packet.qos == Protocol.QoS0){\n            return null;\n        } else {\n            if(packet.retryTimes != undefined && packet.retryTimes > 0) {\n                let retryPacket = _.cloneDeep(packet);\n                retryPacket.retryTimes++;\n                retryPacket.timestamp = moment().add(retryPacket.retryTimes * 5, 's').unix();\n                return retryPacket;\n            } else {\n                let retryPacket = Protocol.Encode(\n                    packet.msgType, packet.qos, 1, packet.identifier, packet.payload);\n                retryPacket.retryTimes = 1;\n                retryPacket.timestamp = moment().add(retryPacket.retryTimes * 5, 's').unix();\n                return retryPacket;\n            }\n        }\n    }\n\n    splitBuffer(buffer){\n        let packets = [];\n        let length = buffer.length;\n        let offset = 0;\n        while(offset < buffer.length){\n            let packet = Protocol.Decode(buffer, offset);\n            packets.push(packet);\n            offset += packet.totalLength;\n        }\n        return packets;\n    }\n\n    combinePacket(packets){\n        let buffers = _.map(packets, function(packet){\n            return packet.buffer;\n        }.bind(this));\n        return Buffer.concat(buffers);\n    }\n\n    // Public method\n\n    parseBody(scope, body, callback){\n        if(body == undefined){\n            let nullString = new Buffer('', 'utf-8');\n            return Promise.resolve(nullString);\n        }\n        body = new Buffer(body, 'utf-8');\n        let packets = this.splitBuffer(body);\n        let waitHandles = _.map(packets, function(packet){\n            return this.handlePacket(scope, packet, callback);\n        }.bind(this));\n        return Promise.all(waitHandles);\n    }\n\n    generateBody(scope){\n        let respondPackets = this.storage.unconfirmedPacket(scope, 5);\n        return respondPackets.then(function(packets){\n            let waitHandles = _.map(packets, function(packet){\n                let retryPacket = this.generateRetryPacket(packet);\n                if(retryPacket != undefined){\n                    return this.storage.savePacket(scope, retryPacket).then(function(){\n                        return packet;\n                    });\n                }\n                return packet;\n            }.bind(this));\n            return Promise.all(waitHandles).then(function(packets){\n                return this.combinePacket(packets);\n            }.bind(this));\n        }.bind(this));\n    }\n\n    commit(scope, payload, qos=Protocol.QoS0){\n        if(typeof payload == 'string'){\n            payload = new Buffer(payload, 'utf-8');\n        }\n        return this.storage.generateId(scope).then(function(id){\n            let packet = Protocol.Encode(\n                Protocol.MSG_TYPE_SEND, qos, 0, id, payload);\n            packet.timestamp = moment().unix();\n            return this.storage.savePacket(scope, packet);\n        }.bind(this));\n    }\n}"]}